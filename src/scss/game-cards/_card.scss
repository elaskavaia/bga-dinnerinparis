/**
 * @author Florent HAZARD <f.hazard@sowapps.com>
 * @copyright 2022 Funnyfox
 */

/**
.game-card is the card it self sized by real dimensions of card
.game-card-inner is the rotating card, it does not impact the container flow
.face is one of the two faces of the card, only show one but animating shows both. Original size scaled to real here.
.face::before The image as background. Original size
 */


.game-card {
  // Card are having a front & a back child element
  // Cards require an inner element to keep their while animating
  background-color: transparent;
  perspective: 1000px;
  position: relative;
  --card-scale: 1;
  
  .game-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 1s, top .5s;
    transform-style: preserve-3d;
    top: 0;
    left: 0;
    overflow: hidden;
    // Default border radius for DIP cards
    border-radius: 10px;

    .overlay {
      .actions {
        position: absolute;
        bottom: 0;
        width: 100%;
        display: flex;
        flex-direction: column;

        .btn {
          display: block;
          color: $color-orange-light;

          &:hover,
          &:active {
            background: rgba($color-secondary, .6);
          }
        }
      }
    }
  }

  .face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    transform-origin: top left;
  }

  .face.front {
    transform: scale(var(--card-scale));
  }

  .face.back {
    transform: scale(var(--card-scale)) rotateY(180deg);
  
    &::before {
      // Flip returned face to get it in right direction
      transform: scaleX(-1);
    }
  }
  
  &.face-back .game-card-inner {
    transform: rotateY(180deg);
  }
  
  &.card-hidden .face.front::before {
    // Flip returned face to get it in right direction
    transform: scaleX(-1);
  }
}

.draw-pile,
.discard-pile {
  position: relative;

  // The first card should be the last element to be over the pile
  .game-card {
    position: absolute;
  }

  .item-counter {
    width: 100%;
    background: rgba($color-black, 0.7);
    text-align: center;
    position: absolute;
    left: 0;
    bottom: 0;
    color: $color-white;
    font-size: 0.625rem;
    border-radius: 0 0 1rem 1rem;

    display: none;
  }

  &:hover .item-counter {
    display: block;
  }
}

.card-set {
  display: inline-flex;
  margin-bottom: .5rem;
  position: relative;
  gap: 0.25rem;

  // Overlapping hand
  //--card-overlapping: -0.8;
  //
  //&:hover {
  //  --card-overlapping: -0.4;
  //}

  //.game-card:not(:first-child) {
  //  transition: margin-left .4s;
  //  margin-left: calc(var(--card-width) * var(--card-overlapping));
  //  //transform: translateX(-90%);
  //}
  
  //.game-card:not(.card-hidden):hover {
  //  z-index: 1;
  //}
}

// Overlap of card river (with slot)
.card-river.overlap {
  --card-overlapping: -0.8;
  
  .card-slot:not(:first-child) {
    transition: margin-left .4s;
    margin-left: calc(var(--card-width) * var(--card-overlapping));
  }
  
  .card-slot:hover {
    z-index: 1;
  }
}

// Overlap of card set (free list)
.card-set.overlap {
  --card-overlapping: -0.8;
  
  .token-wrapper:not(:first-child) {
    transition: margin-left .4s;
    margin-left: calc(var(--card-width) * var(--card-overlapping));
  }
  
  .token-wrapper:hover {
    z-index: 1;
  }
}

.card-preview {
  text-align: center;
  
  & > .game-card {
    display: inline-block;
  }
}

// Sizes
.size-79 {
  --card-width: 79px;
}
